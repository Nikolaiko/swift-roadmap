//
// CharactersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CharactersAPI {

    /**
     get all characters
     
     - parameter page: (query)  (optional)
     - returns: CharactersList
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getAllCharacters(page: Int? = nil) async throws -> CharactersList {
        return try await getAllCharactersWithRequestBuilder(page: page).execute().body
    }

    /**
     get all characters
     - GET /character
     - Get All Characters
     - parameter page: (query)  (optional)
     - returns: RequestBuilder<CharactersList> 
     */
    open class func getAllCharactersWithRequestBuilder(page: Int? = nil) -> RequestBuilder<CharactersList> {
        let localVariablePath = "/character"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CharactersList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     get current character
     
     - parameter id: (path)  
     - returns: CharactersList
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getSingleCharacter(id: String) async throws -> CharactersList {
        return try await getSingleCharacterWithRequestBuilder(id: id).execute().body
    }

    /**
     get current character
     - GET /character/{id}
     - Get Current Charcater
     - parameter id: (path)  
     - returns: RequestBuilder<CharactersList> 
     */
    open class func getSingleCharacterWithRequestBuilder(id: String) -> RequestBuilder<CharactersList> {
        var localVariablePath = "/character/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CharactersList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
